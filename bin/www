#!/usr/bin/env node
require('dotenv').config();
const app = require('../app');
const http = require('http');
const winston = require('winston');

let port = normalizePort(process.env.PORT || '3000');
let host = process.env.HOST || `127.0.0.1`;

//Create HTTP server.
var server = http.createServer(app);

//Listen on provided port and host.
server.listen(port, host);
server.on('error', onError);
server.on('listening', () => {
    winston.info(`Server started on ${new Date()}`);
    winston.info(`server is running at http://${server.address().address}:${server.address().port}`);
})

// Normalize a port into a number, string, or false.
function normalizePort(val) {
    let port = parseInt(val, 10);
    if (isNaN(port)) {
        // named pipe
        return val;
    }
    if (port >= 0) {
        // port number
        return port;
    }
    return false;
}


//Event listener for HTTP server "error" event.
function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }
    let bind = typeof port === 'string'
        ? 'Pipe ' + port
        : 'Port ' + port;
    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}